module mlopadd #(parameter N=200, parameter M = 200)(
    input clk,
    input rst_b,
    input [N-1:0] x,
    output reg [M-1:0] a
);

  reg [M-1:0] sum;
  integer i;

  always @(posedge clk or negedge rst_b) begin
    if (!rst_b)begin
        sum <= 0;
    end
    else if(i<100)begin
        sum <= sum + (2 * i + 1);
        i=i+1;
    end
    else begin
      a<=sum;
    end
  end
endmodule

module tb_mlopadd();
   localparam M=200;
   reg clk;
   reg rst_b;
   wire [M-1:0] a;

   mlopadd #(.N(M), .M(M)) DUT (
       .clk(clk),
       .rst_b(rst_b),
       .x(0), // No need to use `x` for this specific test
       .a(a)
   );

   initial begin
       clk = 0;
       rst_b = 0;
       #25 rst_b = 1;
       $display("TIME\tRST_B\tA");
       $monitor("%0t\t%b\t%b", $time, rst_b, a);
       
       // Generate clock
       forever #50 clk = ~clk;
   end
endmodule


